version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gridhealth-postgres
    environment:
      POSTGRES_DB: gridhealth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - gridhealth-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: gridhealth-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gridhealth-network

  # Express Server API
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: gridhealth-server
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: gridhealth
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: dev-secret-key-change-in-production
      JWT_EXPIRES_IN: 24h
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - gridhealth-network
    command: npm run dev

  # Dashboard
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile.dev
    container_name: gridhealth-dashboard
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./dashboard:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - server
    networks:
      - gridhealth-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  gridhealth-network:
    driver: bridge 